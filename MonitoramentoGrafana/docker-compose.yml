volumes:
  grafana_data:

  prometheus_data:

  loki_data:

  db_data:

  tempo_data:

networks:
  default:
  monitoring:

services:
  grafana:
    image: grafana/grafana:12.0.0
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor metricsSummary
      - GF_INSTALL_PLUGINS=https://storage.googleapis.com/integration-artifacts/grafana-exploretraces-app/grafana-exploretraces-app-latest.zip;grafana-traces-app
    restart: on-failure
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:v3.4.1
    ports:
      - 9090:9090
    volumes:
      - prometheus_data:/prometheus
      - ./config/prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=60d'
      - '--web.enable-remote-write-receiver'
      - '--enable-feature=native-histograms'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--enable-feature=exemplar-storage'
    restart: on-failure
    links:
    - node-exporter:node-exporter
    networks:
    - monitoring
  
  init-tempo:
    image: &tempoImage grafana/tempo:2.8.0
    user: root
    entrypoint: 
    - "chown"
    - "10001:10001"
    - "/var/tempo"
    volumes:
    - ./tempo-data:/var/tempo

  memcached:
    image: memcached:1.6.38
    container_name: memcached
    environment:
      - MEMCACHED_MAX_MEMORY=64m
      - MEMCACHED_THREADS=4
    ports:
      - "11211:11211"

  tempo:
    image: *tempoImage
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./config/tempo/tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/var/tempo
    ports:
      - "3200:3200" 
      - "4317:4317"  
      - "4318:4318"
    depends_on:
      - init-tempo
      - memcached
    networks:
      - monitoring

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    volumes:
      - '/:/host:ro'
    command:
      - '--path.rootfs=/host' 
    network_mode: host
    pid: host
    restart: unless-stopped


  loki:
    image: grafana/loki:3.5.1
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
    - ./config/loki/config.yml:/etc/loki/config.yml
    - ./loki/tsdb:/data/tsdb
    - ./loki/retention:/data/retention
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    restart: on-failure
    networks:
      - monitoring

  app:
    build: .
    ports:
      - "5001:5000"
      - "8000:8000"
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=developments
      - MYSQL_HOST=db
      - MYSQL_USER=root
      - MYSQL_PASSWORD=senha123
      - MYSQL_DB=api_receitas
      - OTEL_SERVICE_NAME=api-receitas
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317 
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED=true
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      loki:
        condition: service_healthy
    networks:
      - monitoring 

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: senha123
      MYSQL_DATABASE: api_receitas
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-psenha123"]
      interval: 5s
      timeout: 10s
      retries: 10

    networks:
      - monitoring
